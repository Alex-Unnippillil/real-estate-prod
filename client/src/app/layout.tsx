import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Providers from "./providers";
import { Toaster } from "@/components/ui/sonner";
import { makeStore } from "@/state/store";
import { api } from "@/state/api";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const store = makeStore();
  store.dispatch(api.endpoints.getAuthUser.initiate());
  await Promise.all(store.dispatch(api.util.getRunningQueriesThunk()));
  const preloadedState = store.getState();

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Providers initialState={preloadedState}>{children}</Providers>
        <Toaster closeButton />
      </body>
    </html>
  );
}
